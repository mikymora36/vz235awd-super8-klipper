### For Fly Super 8 V1.3 ####
### And Mellow Kit  ####
### For Fly Super 8 V1.3, the SPI bus is spi3

[include mainsail.cfg]
[include timelapse.cfg]
[include Exclude_Object.cfg]
[include Start_Stop.cfg]
[include Macro.cfg]
[include Speed.cfg]

[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
#[include ./KAMP/Line_Purge.cfg]            
#[include ./KAMP/Voron_Purge.cfg]
[include ./KAMP/Smart_Park.cfg]

[display_status]

[exclude_object]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
#path: ~/printer_data/gcodes

[pause_resume]
recover_velocity: 350

# Enable arcs support for Orcaslicer.
[gcode_arcs]
resolution: 0.1

##### VzBoT235 AWD ############
#######################

[printer]
kinematics: corexy
max_velocity: 1000
max_accel: 25000
#max_accel_to_decel: 5000
minimum_cruise_ratio: 0.25
max_z_velocity: 25
max_z_accel: 1500
square_corner_velocity: 10

########################
########################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_4A001D001750535447393520-if00  # put your own Serial here.
#restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor FLY-Super8]
sensor_type: temperature_mcu

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

########################
########################
[mcu scanner]
serial: /dev/serial/by-id/usb-Cartographer_614e_180031001443565537353020-if00

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 24.25                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.01
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[safe_z_home]
home_xy_position: 114, 114 
speed: 100
z_hop: 5
z_hop_speed: 25

[z_tilt]
z_positions: 0, 114
            228, 114
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points: 10, 114
        218, 114
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 250
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 2
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.05
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.

[screws_tilt_adjust]
screw1: 30, 30
#   The (X, Y) coordinate of the first bed leveling screw. This is a
#   position to command the nozzle to so that the probe is directly
#   above the bed screw (or as close as possible while still being
#   above the bed). This is the base screw used in calculations. This
#   parameter must be provided.
screw1_name: FRONT LEFT
#   An arbitrary name for the given screw. This name is displayed when
#   the helper script runs. The default is to use a name based upon
#   the screw XY location.
screw2: 200, 30
screw2_name: FRONT RIGHT
screw3: 200, 200
screw3_name: BACK RIGHT
screw4: 30, 200
screw4_name: BACK LEFT
#...
#   Additional bed leveling screws. At least two screws must be
#   defined.
speed: 250
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 3
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
screw_thread: CW-M3
#   The type of screw used for bed leveling, M3, M4, or M5, and the
#   rotation direction of the knob that is used to level the bed.
#   Accepted values: CW-M3, CCW-M3, CW-M4, CCW-M4, CW-M5, CCW-M5.
#   Default value is CW-M3 which most printers use. A clockwise
#   rotation of the knob decreases the gap between the nozzle and the
#   bed. Conversely, a counter-clockwise rotation increases the gap.

[bed_mesh]
zero_reference_position: 114, 114    
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 3
#    height of scanner during bed mesh scan
mesh_min: 5, 25
#    start point of bed mesh [X, Y]
mesh_max: 220, 200
#    end point of bed mesh [X, Y]
probe_count: 10, 10
algorithm: bicubic

[lis2dw]
cs_pin: scanner:PA3
spi_bus: spi1
axes_map: x,-y,-z

[resonance_tester]
accel_chip: lis2dw
probe_points:
    118, 114, 20

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 5
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

[stepper_x]
##	in M6 position
step_pin: PE0
dir_pin: PG3
enable_pin: !PG4
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200  
endstop_pin: PG12            #make sure to set the correct pin here.
position_endstop: 0
position_min: 0
position_max: 230
homing_speed: 75 
homing_retract_dist: 0

[tmc5160 stepper_x] 
#spi_bus: spi3
cs_pin: PG2
#diag_pin: PA8
interpolate: false
run_current: 1.9
sense_resistor: 0.033
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
#driver_SGT: -64 # -64 is most sensitive value, 63 is least sensitive
driver_TBL: 1
driver_TOFF: 3
driver_DISS2G: 1
driver_DISS2VS: 1

[stepper_x1]
##	in M5 position
step_pin: PE1
dir_pin: PF0
enable_pin: !PC15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
#endstop_pin: tmc5160_stepper_x:virtual_endstop 

[tmc5160 stepper_x1] 
#spi_bus: spi3
cs_pin: PF1
#diag_pin: PD6
interpolate: false
run_current: 1.9
sense_resistor: 0.033
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
#driver_SGT: -64 # -64 is most sensitive value, 63 is least sensitive
driver_TBL: 1
driver_TOFF: 3
driver_DISS2G: 1
driver_DISS2VS: 1

[stepper_y]
##	in M4 position
step_pin: PE15
dir_pin: PE11
enable_pin: !PF2
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200  
endstop_pin: PG11                 #make sure to set the correct pin here.
position_endstop: 0
position_min: 0
position_max: 230
homing_speed: 75  
homing_retract_dist: 0

[tmc5160 stepper_y] 
#spi_bus: spi3
cs_pin: PE10
#diag_pin: PD7
interpolate: false
run_current: 1.9
sense_resistor: 0.033
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
#driver_SGT: -64 # -64 is most sensitive value, 63 is least sensitive
driver_TBL: 1
driver_TOFF: 3
driver_DISS2G: 1
driver_DISS2VS: 1

[stepper_y1]
##	in M3 position
step_pin: PE14
dir_pin: PE8
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
#endstop_pin: tmc5160_stepper_y:virtual_endstop  

[tmc5160 stepper_y1] 
#spi_bus: spi3
cs_pin: PE7
#diag_pin: PG9
interpolate: false
run_current: 1.9
sense_resistor: 0.033
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
#driver_SGT: -64 # -64 is most sensitive value, 63 is least sensitive
driver_TBL: 1
driver_TOFF: 3
driver_DISS2G: 1
driver_DISS2VS: 1

#########################

[stepper_z]
## In M2 position
step_pin: PE4
dir_pin: !PG0
enable_pin: !PG1
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop             #make sure to set the correct pin here.
#position_endstop: 0.0
position_min: -5
position_max: 254
full_steps_per_rotation: 200
homing_retract_dist: 0
homing_positive_dir: false
homing_speed: 15
second_homing_speed: 2.5

[tmc2209 stepper_z]
interpolate: false
uart_pin: PF15
run_current: 0.5
stealthchop_threshold: 0

[stepper_z1]
## In M1 position
step_pin: PE3
dir_pin: !PF13
enable_pin: !PF14
microsteps: 32
rotation_distance: 8

[tmc2209 stepper_z1]
interpolate: false
uart_pin: PF12
run_current: 0.5
stealthchop_threshold: 0

[extruder]
## In M0 position
### ProtoXtruder 2.0 LDO 20mm 10T
step_pin: PE2
dir_pin: PC5
enable_pin: !PF11
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 53.494165  # Re-calibrate your own value
gear_ratio: 44:10, 37:17

nozzle_diameter: 0.4
filament_diameter: 1.75

heater_pin: PB0
sensor_type: ATC Semitec 104NT-4-R025H42G #Rapido UHF #Generic 3950 (for Mellow CHP)
sensor_pin: PF4

min_temp: 0
max_temp: 285

min_extrude_temp: 170

max_extrude_only_distance: 1000
max_extrude_cross_section: 500
max_extrude_only_velocity: 200
max_extrude_only_accel: 10000


pressure_advance: 0.02
pressure_advance_smooth_time: 0.03

[tmc2209 extruder]
uart_pin: PC4
interpolate: false
run_current: 0.7
sense_resistor: 0.110

[filament_motion_sensor SFS_T0]
detection_length: 10.00 ; This can be adjusted to your desired level of sensitivity. 10 is a recommended value to prevent flow dropoff false triggers.
extruder: extruder
switch_pin: ^PA8
pause_on_runout: True ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below.
event_delay: 3.0
pause_delay: 0.5
runout_gcode:
    M117 Runout Detected!

########################
########################

[heater_bed]
heater_pin: PE5
sensor_type: Generic 3950
sensor_pin: PC1
min_temp: 0
max_temp: 130

########################
#### FANS ##############
########################

[fan]
##	CPAP - Print Cooling Fan - PF8
pin: PF8
max_power: 0.75
cycle_time: 0.002
hardware_pwm: false
shutdown_speed: 0

[heater_fan Hotend_fan]
##	Hotend Fan - FAN5 Connector
## in case of a watercooler that is 24V use a Heater Pin like PF7 Heat3 for a larger mosfet that can handle more amps.
pin: PB11
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[fan_generic Exhaust_fan]
##  exhaust fan - In FAN4
pin: PA15
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10

#[fan_generic chamber_fan]
###  chamber fan - In FAN9 Positon
#pin: PD15
#max_power: 1
#shutdown_speed: 0
#kick_start_time: 0.1
#off_below: 0.10

[controller_fan TMC5160 driver_fan] 
stepper: stepper_x
pin: PD15
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10

########################
########################

[temperature_sensor chamber]  optional for chamber temp
sensor_type: Generic 3950
#pullup_resistor: 4700
sensor_pin: PF9
min_temp: 0
max_temp: 60
gcode_id: C: C

#[temperature_sensor Bed_Edge]
#Sensor_type: Generic 3950
#sensor_pin:PF4

###########################################
#########Custom PINs Definition ############
###########################################

[output_pin LED]
#In FAN8 position if 12 or 5V
#When 24V use a heater pin like Heat4 PF6
pin: PD14
pwm: false
value: 1
shutdown_value:1
### gcode command: SET_PIN PIN=LED value=0 to 1

[idle_timeout]
timeout: 1800
gcode =
  {% if printer.pause_resume.is_paused %}
    M104 S0
  {% else %}
    TURN_OFF_HEATERS
    #M84
  {% endif %}

###########################
###########################

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=1 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=SFS_T0 ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True





#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.304
#*# pid_ki = 1.105
#*# pid_kd = 314.754
#*#
#*# [scanner]
#*# mode = touch
#*#
#*# [scanner model default]
#*# model_coef = 1.383494049668075,
#*# 	1.8129909174365821,
#*# 	0.7445519880976454,
#*# 	0.23740404082038324,
#*# 	0.44063604324469247,
#*# 	0.8282500383855563,
#*# 	-0.36783278357378485,
#*# 	-0.9657858858323174,
#*# 	0.34924964486961924,
#*# 	0.538494868815883
#*# model_domain = 3.217676679370329e-07,3.352632836780934e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 27.108796
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.1.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 116.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 108.8
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.153
#*# pid_ki = 2.801
#*# pid_kd = 70.735
